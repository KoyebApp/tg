let handler = async ({ m, command, bot, usedPrefix, text }) => {
  try {
    // Extract the query from the command, removing the prefix
    const query = command.replace(usedPrefix, '').trim(); // Remove prefix and extra spaces

    // Ensure the query is valid
    if (!query) {
      return await bot.sendMessage(m.chat.id, `‚ú≥Ô∏è Please provide a valid menu. Example: ${usedPrefix}mainmenu`);
    }

    // Log the query to debug
    console.log('Selected menu:', query);

    // Switch-case structure to handle different menu commands
    switch (query.toLowerCase()) {
      case 'mainmenu':
        await bot.sendMessage(m.chat.id, `
          üè† Main Menu:
          ‚ñ¢ 1. Anime Menu
          ‚ñ¢ 2. Bot Commands
          ‚ñ¢ 3. Info Menu
          ‚ñ¢ 4. Settings
          ‚ñ¢ 5. Help`);
        break;

      case 'animemenu':
        await bot.sendMessage(m.chat.id, `
          üçø Anime Menu:
          ‚ñ¢ 1. Naruto
          ‚ñ¢ 2. One Piece
          ‚ñ¢ 3. Attack on Titan
          ‚ñ¢ 4. Dragon Ball
          ‚ñ¢ 5. My Hero Academia`);
        break;

      case 'botmenu':
        await bot.sendMessage(m.chat.id, `
          ü§ñ Bot Menu:
          ‚ñ¢ 1. Bot Info
          ‚ñ¢ 2. Command List
          ‚ñ¢ 3. Bot Status
          ‚ñ¢ 4. Settings`);
        break;

      case 'infomenu':
        await bot.sendMessage(m.chat.id, `
          ‚ÑπÔ∏è Info Menu:
          ‚ñ¢ 1. About the Bot
          ‚ñ¢ 2. Creator Info
          ‚ñ¢ 3. Version Info`);
        break;

      case 'settings':
        await bot.sendMessage(m.chat.id, `
          ‚öôÔ∏è Settings:
          ‚ñ¢ 1. Change Language
          ‚ñ¢ 2. Set Time Zone
          ‚ñ¢ 3. Notifications`);
        break;

      case 'help':
        await bot.sendMessage(m.chat.id, `
          üÜò Help:
          ‚ñ¢ 1. Main Menu
          ‚ñ¢ 2. Anime Menu
          ‚ñ¢ 3. Bot Menu
          ‚ñ¢ 4. Info Menu
          ‚ñ¢ 5. Settings`);
        break;

      default:
        await bot.sendMessage(m.chat.id, `‚ùå Unknown menu. Please use a valid menu command.`);
    }

  } catch (error) {
    console.error('Error processing the menu request:', error.message);
    await bot.sendMessage(m.chat.id, '‚ùå Something went wrong. Please try again later.');
  }
};

// Define commands that trigger this plugin
handler.command = [
  'mainmenu', 'animemenu', 'botmenu', 'infomenu', 'settings', 'help'
];

handler.help = [
  'mainmenu', 'animemenu', 'botmenu', 'infomenu', 'settings', 'help'
];

handler.tags = ['menu'];  // Assign the plugin a tag for categorization

module.exports = handler;
